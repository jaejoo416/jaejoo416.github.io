{"version":3,"sources":["webpack:///./src/libs/magnifier.js","webpack:///./src/templates/detail.js"],"names":["Magnifier","img","glass","zoom","bw","this","w","offsetWidth","h","offsetHeight","moveMagnifier","bind","init","style","backgroundImage","src","backgroundRepeat","backgroundSize","width","height","addEventListener","e","pos","x","y","preventDefault","getCursorPos","left","top","backgroundPosition","a","window","event","getBoundingClientRect","pageX","pageY","pageXOffset","pageYOffset","query","Detail","data","pageContext","state","useContext","GlobalStateContext","useState","isPrevVisible","setPrevVisible","dataJson","items","length","isNextVisible","setNextVisible","container","useRef","item","find","name","itemName","controlMoreItems","type","c","current","block","firstElementChild","clientWidth","scrollTo","scrollLeft","scrollWidth","menuList","background","className","itemHeight","ref","fluid","images","childImageSharp","imgSize","onLoad","imageRef","id","detail","drops","colors","map","row","index","key","colorCode","backgroundColor","onScroll","itemNameSplit","split","to","toLowerCase","onClick"],"mappings":"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","file":"component---src-templates-detail-js-09bf8899135d984f0e8d.js","sourcesContent":["export default class Magnifier {\r\n  constructor (img, glass, zoom = 2, bw = 3) {\r\n    this.img = img\r\n    this.glass = glass\r\n    this.w = glass.offsetWidth / 2\r\n    this.h = glass.offsetHeight / 2\r\n    this.bw = bw\r\n    this.zoom = zoom\r\n\r\n    this.moveMagnifier = this.moveMagnifier.bind(this)\r\n    this.init()\r\n  }\r\n\r\n  init () {\r\n    /* Set background properties for the magnifier glass: */\r\n    this.glass.style.backgroundImage = `url('${this.img.src}')`\r\n    this.glass.style.backgroundRepeat = `no-repeat`\r\n    this.glass.style.backgroundSize = `${this.img.width * this.zoom}px ${this.img.height * this.zoom}px`\r\n    \r\n    /* Execute a function when someone moves the magnifier glass over the image: */\r\n    this.glass.addEventListener('mousemove', this.moveMagnifier)\r\n    this.img.addEventListener('mousemove', this.moveMagnifier)\r\n\r\n    /*and also for touch screens:*/\r\n    this.glass.addEventListener('touchmove', this.moveMagnifier)\r\n    this.img.addEventListener('touchmove', this.moveMagnifier)\r\n  }\r\n\r\n  moveMagnifier (e) {\r\n    let pos, x, y\r\n    /* Prevent any other actions that may occur when moving over the image */\r\n    e.preventDefault()\r\n    /* Get the cursor's x and y positions: */\r\n    pos = this.getCursorPos(e)\r\n    x = pos.x\r\n    y = pos.y\r\n    /* Prevent the magnifier glass from being positioned outside the image: */\r\n    if (x > this.img.width - this.w / this.zoom) {\r\n      x = this.img.width - this.w / this.zoom\r\n    }\r\n    if (x < this.w / this.zoom) {\r\n      x = this.w / this.zoom\r\n    }\r\n    if (y > this.img.height - this.h / this.zoom) {\r\n      y = this.img.height - this.h / this.zoom\r\n    }\r\n    if (y < this.h / this.zoom) {\r\n      y = this.h / this.zoom\r\n    }\r\n    /* Set the position of the magnifier glass: */\r\n    this.glass.style.left = `${x - this.w}px`\r\n    this.glass.style.top = `${y - this.h}px`\r\n    /* Display what the magnifier glass \"sees\": */\r\n    this.glass.style.backgroundPosition = `-${x * this.zoom - this.w + this.bw}px -${y * this.zoom - this.h + this.bw}px`\r\n\r\n  }\r\n\r\n  getCursorPos (e) {\r\n    let a,\r\n        x = 0,\r\n        y = 0\r\n    e = e || window.event\r\n    /* Get the x and y positions of the image: */\r\n    a = this.img.getBoundingClientRect()\r\n    /* Calculate the cursor's x and y coordinates, relative to the image: */\r\n    x = e.pageX - a.left\r\n    y = e.pageY - a.top\r\n    /* Consider any page scrolling: */\r\n    x = x - window.pageXOffset\r\n    y = y - window.pageYOffset\r\n    return { x, y }\r\n  }\r\n}","import React, { useContext, useState, useRef } from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport Magnifier from '../libs/magnifier'\r\nimport { GlobalStateContext } from '../context/GlobalContextProvider'\r\nimport Header from '../components/header'\r\n\r\nexport const query = graphql`\r\n  query($itemName: String) {\r\n    dataJson(items: { elemMatch: { name: { eq: $itemName } } }) {\r\n      items {\r\n        name\r\n        id\r\n        detail\r\n        drops\r\n        colors\r\n        images {\r\n          childImageSharp {\r\n            fluid(maxWidth: 600, quality: 100) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Detail = ({ data, pageContext }) => {\r\n  const state = useContext(GlobalStateContext)\r\n  const [isPrevVisible, setPrevVisible] = useState(false)\r\n  const [isNextVisible, setNextVisible] = useState(data.dataJson.items.length > 5)\r\n  const container = useRef()\r\n  const glass = useRef()\r\n  const img = useRef()\r\n  const item = data.dataJson.items.find(item => item.name === pageContext.itemName)\r\n\r\n  const controlMoreItems = type => {\r\n    const c = container.current\r\n    const block = c.firstElementChild.clientWidth + 1\r\n    switch (type) {\r\n      case 'prev':\r\n        c.scrollTo(c.scrollLeft - block, 0)\r\n        break\r\n      case 'next':\r\n        c.scrollTo(c.scrollLeft + block, 0)\r\n        break\r\n      default:\r\n        setPrevVisible(c.scrollLeft > 0)\r\n        setNextVisible(c.scrollLeft + c.clientWidth < c.scrollWidth)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header menuList={pageContext.menuList} background={true} />\r\n      <section className=\"detail\">\r\n        <div className=\"item\" style={{ height: `${state.itemHeight}px` }}>\r\n          <div className=\"img-box\">\r\n            <div ref={glass} className=\"glass\" />\r\n            <Img\r\n              ref={img}\r\n              fluid={item.images[1].childImageSharp.fluid}\r\n              style={{\r\n                width: `${state.imgSize}px`,\r\n                height: `${state.imgSize}px`,\r\n              }}\r\n              onLoad={() => {\r\n                new Magnifier(img.current.imageRef.current, glass.current)\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"item\" style={{ height: `${state.itemHeight}px` }}>\r\n          <div className=\"top\">\r\n            <h2>{item.name}</h2>\r\n            <h3>{item.id}</h3>\r\n          </div>\r\n          <div className=\"bottom\">\r\n            <div>\r\n              <h4>DETAILS</h4>\r\n              <div className=\"text\">\r\n                <i>○ </i> {item.detail}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <h4>PRODUCT INFOMATION</h4>\r\n              <div className=\"drops\">○ the number of drops: {item.drops}</div>\r\n              <div className=\"colors\">\r\n                <span>○ colors: </span>\r\n                {item.colors.map((row, index) => (\r\n                  <ul key={index}>\r\n                    {row.map(colorCode => (\r\n                      <li\r\n                        style={{ backgroundColor: colorCode }}\r\n                        key={colorCode}\r\n                      >\r\n                        <div className=\"box\" />\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"more\">\r\n          <ul ref={container} onScroll={controlMoreItems}>\r\n            {data.dataJson.items.map(item => {\r\n              if (item.name !== pageContext.itemName) {\r\n                const itemNameSplit = item.name.split(/\\s/g)\r\n                return (\r\n                  <li key={item.id}>\r\n                    <Link\r\n                      to={`/${itemNameSplit[0].toLowerCase()}/${\r\n                        itemNameSplit[1]\r\n                      }`}\r\n                    >\r\n                      <Img fluid={item.images[1].childImageSharp.fluid} />\r\n                      <div className=\"box\">\r\n                        <div className=\"text\">{item.id}</div>\r\n                      </div>\r\n                    </Link>\r\n                  </li>\r\n                )\r\n              } else {\r\n                return null\r\n              }\r\n            })}\r\n          </ul>\r\n          <div className=\"arrow\">\r\n            <button\r\n              className={`prev${isPrevVisible ? '' : ' hide'}`}\r\n              onClick={() => controlMoreItems('prev')}\r\n            >\r\n              이전\r\n            </button>\r\n            <button\r\n              className={`next${isNextVisible ? '' : ' hide'}`}\r\n              onClick={() => controlMoreItems('next')}\r\n            >\r\n              다음\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n"],"sourceRoot":""}